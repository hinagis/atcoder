fn main() {
    proconio::input! {
        mut t: (i64, i64),
        mut a: (i64, i64),
        n: i64,
        m: usize,
        l: usize,
        s: [(char, i64); m],
        b: [(char, i64); l]
    }
    let mut c = 0;
    let mut p = 0;
    let mut i = (0, 0);
    let mut j = (0, 0);
    while p < n {
        let d = (s[i.0].1 - i.1).min(b[j.0].1 - j.1);
        if s[i.0].0 == b[j.0].0 {
            if t.0 == a.0 && t.1 == a.1 {
                c += d;
            }
        } else {
            let e = ((t.0 - a.0).abs() + (t.1 - a.1).abs()) % 2 == 0;
            match (s[i.0].0, b[j.0].0) {
                ('U', 'D') => {if e && t.0 > a.0 && t.1 == a.1 && t.0 - d <= a.0 + d {c += 1;}},
                ('D', 'U') => {if e && t.0 < a.0 && t.1 == a.1 && t.0 + d >= a.0 - d {c += 1;}},
                ('L', 'R') => {if e && t.1 > a.1 && t.0 == a.0 && t.1 - d <= a.1 + d {c += 1;}},
                ('R', 'L') => {if e && t.1 < a.1 && t.0 == a.0 && t.1 + d >= a.1 - d {c += 1;}},
                ('U', 'L') => {if e && t.0 > a.0 && t.1 <  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.0 - d <= a.0 && a.1 - d <= t.1 {c += 1;}},
                ('U', 'R') => {if e && t.0 > a.0 && t.1 >  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.0 - d <= a.0 && a.1 + d >= t.1 {c += 1;}},
                ('D', 'L') => {if e && t.0 < a.0 && t.1 <  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.0 + d >= a.0 && a.1 - d <= t.1 {c += 1;}},
                ('D', 'R') => {if e && t.0 < a.0 && t.1 >  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.0 + d >= a.0 && a.1 + d >= t.1 {c += 1;}},
                ('L', 'U') => {if e && t.0 < a.0 && t.1 >  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.1 - d <= a.1 && a.0 - d <= t.0 {c += 1;}},
                ('L', 'D') => {if e && t.0 > a.0 && t.1 >  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.1 - d <= a.1 && a.0 + d >= t.0 {c += 1;}},
                ('R', 'U') => {if e && t.0 < a.0 && t.1 <  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.1 + d >= a.1 && a.0 - d <= t.0 {c += 1;}},
                ('R', 'D') => {if e && t.0 > a.0 && t.1 <  a.1 && (t.0 - a.0).abs() == (t.1 - a.1).abs() && t.1 + d >= a.1 && a.0 + d >= t.0 {c += 1;}},
                _ => {}
            }
        }
        match s[i.0].0 {
            'U' => {t.0 -= d;},
            'D' => {t.0 += d;},
            'L' => {t.1 -= d;},
            _ =>   {t.1 += d;},
        }
        match b[j.0].0 {
            'U' => {a.0 -= d;},
            'D' => {a.0 += d;},
            'L' => {a.1 -= d;},
            _ =>   {a.1 += d;},
        }
        p += d;
        i.1 += d;
        j.1 += d;
        if i.1 >= s[i.0].1 {
            i.0 += 1;
            i.1 = 0;
        }
        if j.1 >= b[j.0].1 {
            j.0 += 1;
            j.1 = 0;
        }
    }
    println!("{}", c);
}
